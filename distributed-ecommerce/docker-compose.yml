version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0 # Use a stable version
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0 # Use a compatible Kafka version
    container_name: kafka
    ports:
      # Expose Kafka port for external connections if needed (e.g. from host)
      - "9092:9092"
      # Port used for inter-broker communication within Docker network
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # Listener configuration for clients inside and outside Docker network
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1 # Required for Exactly Once Semantics (EOS) if enabled
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 # Required for EOS
      # Auto create topics if needed for development
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    environment:
      # Point to Kafka within the Docker network
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:29092
      # Other env vars if needed (e.g., database connection)

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "8082:8082" # Expose if health checks are added
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:29092

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8083:8083" # Expose if health checks are added
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:29092